# render.yaml
# This file defines the services for deploying the real-time ML pipeline on Render.

services:
  # 1. Kafka (Redpanda) as a Private Docker Service
  # This service is not exposed to the public internet but is accessible
  # to other services in the same Render account.
  - type: pserv
    name: kafka
    runtime: docker
    docker:
      image: redpandadata/redpanda:v23.3.12
    plan: starter # Private services generally need a paid plan for stability
    ports:
      - port: 9092
        protocol: TCP
    startCommand: > # Use > for a multi-line command
      redpanda start
      --overprovisioned --smp=1 --memory=1G --reserve-memory=0M --check=false
      --kafka-addr PLAINTEXT://0.0.0.0:9092
      --advertise-kafka-addr PLAINTEXT://kafka:9092

  # 2. The Streamlit Dashboard as a Web Service
  - type: web
    name: dashboard
    env: python
    plan: free # Can start on the free tier
    buildCommand: pip install -r requirements.txt
    startCommand: streamlit run dashboard/training_monitor.py --server.port $PORT --server.address 0.0.0.0
    envVars:
      - key: PYTHONUNBUFFERED # Ensures logs appear in real-time
        value: 1
      - key: KAFKA_BOOTSTRAP
        fromService:
          type: pserv
          name: kafka
          property: hostport

  # 3. The Data Producer as a Background Worker
  - type: worker
    name: producer
    env: python
    plan: free
    buildCommand: pip install -r requirements.txt
    startCommand: python ingestion/producer.py
    envVars:
      - key: KAFKA_BOOTSTRAP
        fromService:
          type: pserv
          name: kafka
          property: hostport
      - key: PYTHONUNBUFFERED
        value: 1

  # 4. The Bronze, Silver, and Trainer workers
  # These are defined similarly to the producer.
  - type: worker
    name: bronze-consumer
    env: python
    plan: free
    buildCommand: pip install -r requirements.txt
    startCommand: python transform/consumer_to_parquet.py
    envVars:
      - key: KAFKA_BOOTSTRAP
        fromService:
          type: pserv
          name: kafka
          property: hostport
      - key: PYTHONUNBUFFERED
        value: 1

  - type: worker
    name: silver-consumer
    env: python
    plan: free
    buildCommand: pip install -r requirements.txt
    startCommand: python transform/consumer_to_silver.py
    envVars:
      - key: KAFKA_BOOTSTRAP
        fromService:
          type: pserv
          name: kafka
          property: hostport
      - key: PYTHONUNBUFFERED
        value: 1

  - type: worker
    name: trainer
    env: python
    plan: free
    buildCommand: pip install -r requirements.txt
    startCommand: python transform/consumer_trainer.py
    envVars:
      - key: PYTHONUNBUFFERED
        value: 1
