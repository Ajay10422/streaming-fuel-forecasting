# render.yaml
previews: false

disks:
  - name: pipeline-data
    sizeGB: 1

services:
  # 1) Kafka (Redpanda) â€“ pserv using official image (no Dockerfile)
  - type: pserv
    name: kafka
    env: docker
    plan: starter
    docker:
      image: redpandadata/redpanda:v23.3.12
    startCommand: >
      redpanda start
      --overprovisioned --smp=1 --memory=1G --reserve-memory=0M --check=false
      --kafka-addr PLAINTEXT://0.0.0.0:9092
      --advertise-kafka-addr PLAINTEXT://kafka:9092
    ports:
      - port: 9092
        protocol: TCP

  # 2) Streamlit Dashboard (Web)
  - type: web
    name: dashboard
    env: docker
    plan: starter
    dockerfilePath: Dockerfile
    startCommand: streamlit run dashboard/training_monitor.py --server.port $PORT --server.address 0.0.0.0
    envVars:
      - key: PYTHONUNBUFFERED
        value: "1"
      - key: KAFKA_BOOTSTRAP
        value: kafka:9092
    disk:
      name: pipeline-data
      mountPath: /data

  # 3) Producer
  - type: worker
    name: producer
    env: docker
    plan: starter
    dockerfilePath: Dockerfile
    startCommand: python ingestion/producer.py
    envVars:
      - key: PYTHONUNBUFFERED
        value: "1"
      - key: KAFKA_BOOTSTRAP
        value: kafka:9092
    disk:
      name: pipeline-data
      mountPath: /data

  # 4) Bronze Consumer
  - type: worker
    name: bronze-consumer
    env: docker
    plan: starter
    dockerfilePath: Dockerfile
    startCommand: python transform/consumer_to_parquet.py
    envVars:
      - key: PYTHONUNBUFFERED
        value: "1"
      - key: KAFKA_BOOTSTRAP
        value: kafka:9092
    disk:
      name: pipeline-data
      mountPath: /data

  # 5) Silver Consumer
  - type: worker
    name: silver-consumer
    env: docker
    plan: starter
    dockerfilePath: Dockerfile
    startCommand: python transform/consumer_to_silver.py
    envVars:
      - key: PYTHONUNBUFFERED
        value: "1"
      - key: KAFKA_BOOTSTRAP
        value: kafka:9092
    disk:
      name: pipeline-data
      mountPath: /data

  # 6) Trainer
  - type: worker
    name: trainer
    env: docker
    plan: starter
    dockerfilePath: Dockerfile
    startCommand: python transform/consumer_trainer.py
    envVars:
      - key: PYTHONUNBUFFERED
        value: "1"
      - key: KAFKA_BOOTSTRAP
        value: kafka:9092
    disk:
      name: pipeline-data
      mountPath: /data
  